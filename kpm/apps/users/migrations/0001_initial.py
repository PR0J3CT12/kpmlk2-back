# Generated by Django 4.1.1 on 2023-02-18 11:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False, verbose_name='user id')),
                ('name', models.CharField(max_length=20, verbose_name='user name')),
                ('login', models.CharField(max_length=20, unique=True, verbose_name='user login')),
                ('password', models.CharField(blank=True, max_length=200, null=True, verbose_name='user password')),
                ('experience', models.IntegerField(blank=True, default=1, null=True, verbose_name='student experience')),
                ('mana_earned', models.IntegerField(blank=True, default=0, null=True, verbose_name='mana earned by student')),
                ('last_homework_id', models.IntegerField(blank=True, default=1, null=True, verbose_name='last homework id')),
                ('last_classwork_id', models.IntegerField(blank=True, default=1, null=True, verbose_name='last classwork id')),
                ('is_admin', models.BooleanField(default=0, verbose_name='is this account is admin')),
                ('school_class', models.IntegerField(blank=True, default=None, null=True, verbose_name='student class')),
                ('default_password', models.CharField(blank=True, max_length=5, null=True, verbose_name='default password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
    ]
